function [P,sgP] = NonLinApproximator(y,r,fun, beta0)

% It is known, that for Linear LSquares the formula is
%   \beta = (X^t X)^{-1}X^t Y

N = size(y,2);
M = size(beta0,2);
%M = 2;
K = size(r,1);

X = zeros(N,M);

% % Gauss-Newtonian method % %

Inf = 100;
beta = beta0';

for it=1:Inf
    [f, J] = MultiFun(fun,r,beta);
    %disp(J);
     %disp(f);
    res = y' - f; % to write it
    Mat = (J' * J) \ J'; % inversed
    d_beta = Mat * res;
    %disp(d_beta);
    
    if sum(isnan(d_beta)) == 0
        disp(beta);
        beta = beta + d_beta;    
        disp(beta);
    else
        break;
    end
end

P = beta;
disp(P);

%S = norm(y' - X*P)^2;

sgP = ones(M,1);

end